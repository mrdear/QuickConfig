# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Quick Config CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-Angular:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.17.1 ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm install

      - name: build
        working-directory: frontend
        run: npm run build --if-present

      - name: copy static
        working-directory: frontend
        run: cp -rf ./dist/frontend/browser/* ../backend/src/main/resources/META-INF/resources

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Extract Maven project version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
        id: project

      - name: Build with Maven
        working-directory: backend
        run: mvn package -Dnative -Dquarkus.native.container-build=true -Dquarkus.container-image.build=true

      - name: Build the Docker image
        working-directory: backend
        run: docker build . --file src/main/docker/Dockerfile.native --tag ${{env.DOCKER_IMAGE_NAME}}:${{steps.project.outputs.version}}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker Push
        working-directory: backend
        run: docker push ${{env.DOCKER_IMAGE_NAME}}:${{steps.project.outputs.version}}

      - name: Docker Push Latest
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        working-directory: backend
        run: docker push ${{env.DOCKER_IMAGE_NAME}}:latest